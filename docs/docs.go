// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/subscription": {
            "put": {
                "description": "Update subscription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Update subscription",
                "parameters": [
                    {
                        "description": "update subscription",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateSubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "strig"
                        }
                    }
                }
            },
            "post": {
                "description": "Create subscription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Create subscription",
                "parameters": [
                    {
                        "description": "create subscription",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateSubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "strig"
                        }
                    }
                }
            }
        },
        "/subscription/{id}": {
            "get": {
                "description": "Get subscriptions by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Get subscription by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subscription Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "strig"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete subscriptions by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Delete subscription by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subscription Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "strig"
                        }
                    }
                }
            }
        },
        "/subscriptions": {
            "get": {
                "description": "Get add subscriptions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Get add subscriptions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Subscription"
                            }
                        }
                    }
                }
            }
        },
        "/subscriptions/total_summ": {
            "get": {
                "description": "Get summ subscriptions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Get summ subscriptions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subscription Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "strig"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.CreateSubscriptionRequest": {
            "type": "object",
            "required": [
                "price",
                "service_name",
                "start_date",
                "user_id"
            ],
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "service_name": {
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 3
                },
                "start_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.Subscription": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "service_name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.UpdateSubscriptionRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "service_name": {
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 3
                },
                "start_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Swagger Subscription Service",
	Description:      "This is a server for user subscriptions.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
