services:

  app:
    container_name: go_container
    tty: true
    build: .
    ports:
      - "8080:8080"
    env_file:
      - .env
    command: >
      sh -c "
      goose up &&
      ./tmp/main
      "
    depends_on:
      postgres:
        condition: service_healthy
        
  postgres:
    container_name: postgres
    image: postgres:16.4
    environment:
      POSTGRES_DB: subscriptions_service
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes: 
      - ./tmp/postgres_database:/data/postgres
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d subscriptions_service"]
      interval: 5s
      timeout: 5s
      retries: 5

  dbgate:
    container_name: dbgate
    image: dbgate/dbgate:5.5.6-alpine
    restart: always
    ports:
      - 8087:3000
    volumes:
      - ./tmp/postgres_database:/data/postgres
    environment:
      CONNECTIONS: con1,con2,con3,con4

      LABEL_con2: Postgres
      SERVER_con2: postgres
      USER_con2: root
      PASSWORD_con2: password
      PORT_con2: 5432
      ENGINE_con2: postgres@dbgate-plugin-postgres

# volumes:
#   dbgate-data:
#     driver: local